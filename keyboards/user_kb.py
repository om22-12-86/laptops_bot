from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ 2 —Å—Ç–æ–ª–±—Ü–∞
user_menu = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ö–∞—Ç–∞–ª–æ–≥", callback_data="catalog"), InlineKeyboardButton(text="–ö–æ—Ä–∑–∏–Ω–∞", callback_data="cart")],
    [InlineKeyboardButton(text="–û –Ω–∞—Å", callback_data="about"), InlineKeyboardButton(text="–ó–∞–∫–∞–∑—ã", callback_data="orders")],
    [InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏", callback_data="contact"), InlineKeyboardButton(text="–î–æ—Å—Ç–∞–≤–∫–∞", callback_data="delivery")]
])

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–ö–∞—Ç–∞–ª–æ–≥)
def get_categories_keyboard(categories):
    keyboard = []

    # –°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ 2 —Å—Ç–æ–ª–±—Ü–∞
    row = []
    for category in categories:
        row.append(InlineKeyboardButton(text=category.name, callback_data=f"category_{category.id}"))
        if len(row) == 2:
            keyboard.append(row)
            row = []

    if row:
        keyboard.append(row)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –∏ "–ö–æ—Ä–∑–∏–Ω–∞"
    keyboard.append([
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu"),
        InlineKeyboardButton(text="üõí –ö–æ—Ä–∑–∏–Ω–∞", callback_data="cart")
    ])
    keyboard.append([
        InlineKeyboardButton(text="üîç –ü–æ–∏—Å–∫", callback_data="search")
    ])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π
def get_subcategories_keyboard(subcategories):
    keyboard = []

    # –°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ 2 —Å—Ç–æ–ª–±—Ü–∞
    row = []
    for subcategory in subcategories:
        row.append(InlineKeyboardButton(text=subcategory.name, callback_data=f"subcategory_{subcategory.id}"))
        if len(row) == 2:
            keyboard.append(row)
            row = []

    if row:
        keyboard.append(row)

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    keyboard.append([
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="catalog")
    ])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_cart_keyboard(cart_items: list, current_index: int = 0):
    buttons = []

    # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º
    buttons.append([
        InlineKeyboardButton(text="‚ûñ", callback_data=f"decrease_{cart_items[current_index].product_id}"),
        InlineKeyboardButton(text="‚ûï", callback_data=f"increase_{cart_items[current_index].product_id}")
    ])

    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    nav_buttons = []
    if len(cart_items) > 1:
        nav_buttons.append(InlineKeyboardButton(text="‚¨ÖÔ∏è", callback_data=f"prev_cart_item_{current_index}"))
        nav_buttons.append(InlineKeyboardButton(text=f"{current_index + 1}/{len(cart_items)}", callback_data="none"))
        nav_buttons.append(InlineKeyboardButton(text="‚û°Ô∏è", callback_data=f"next_cart_item_{current_index}"))
        buttons.append(nav_buttons)

    # –î—Ä—É–≥–∏–µ –∫–Ω–æ–ø–∫–∏
    buttons.append([
        InlineKeyboardButton(text="üõí –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑", callback_data="place_order_user"),
        InlineKeyboardButton(text="‚¨ÖÔ∏è –í –º–µ–Ω—é", callback_data="main_menu")
    ])

    return InlineKeyboardMarkup(inline_keyboard=buttons)




# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—É—Å—Ç–æ–π –∫–æ—Ä–∑–∏–Ω—ã
def get_empty_cart_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")]
    ])

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–∞
def get_product_keyboard(product_id: int, page: int, total_products: int, subcategory_id: int):
    buttons = [
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"back_to_subcategory_{subcategory_id}"),
         InlineKeyboardButton(text="üõí –ö–æ—Ä–∑–∏–Ω–∞", callback_data="cart")],
        [InlineKeyboardButton(text="üì∑ –§–û–¢–û", callback_data=f"product_images_{product_id}"),
         InlineKeyboardButton(text="üìä –¢–ï–•/–ü–ê–†", callback_data=f"product_specs_{product_id}")],
        [InlineKeyboardButton(text="‚òëÔ∏è –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É", callback_data=f"buy_product_{product_id}")]
    ]

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    navigation_buttons = []
    if page > 0:
        navigation_buttons.append(InlineKeyboardButton(text="‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∏–π", callback_data=f"prev_product_{subcategory_id}_{page - 1}"))
    if page < total_products - 1:
        navigation_buttons.append(InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π", callback_data=f"next_product_{subcategory_id}_{page + 1}"))

    if navigation_buttons:
        buttons.append(navigation_buttons)

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_search_results_keyboard(product_id: int, current_index: int, total: int, query: str):
    buttons = [
        [
            InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="catalog"),
            InlineKeyboardButton(text="üõí –ö–æ—Ä–∑–∏–Ω–∞", callback_data="cart")
        ],
        [
            InlineKeyboardButton(text="üì∑ –§–æ—Ç–æ", callback_data=f"product_images_{product_id}"),
            InlineKeyboardButton(text="üìä –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏", callback_data=f"product_specs_{product_id}")
        ],
        [
            InlineKeyboardButton(text="üõçÔ∏è –í –∫–æ—Ä–∑–∏–Ω—É", callback_data=f"buy_product_{product_id}")
        ]
    ]

    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    nav_buttons = []
    if current_index > 0:
        nav_buttons.append(InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ü—Ä–µ–¥.",
            callback_data=f"prev_search_{query}_{current_index - 1}"
        ))

    nav_buttons.append(InlineKeyboardButton(
        text=f"{current_index + 1}/{total}",
        callback_data="none"
    ))

    if current_index < total - 1:
        nav_buttons.append(InlineKeyboardButton(
            text="–°–ª–µ–¥. ‚û°Ô∏è",
            callback_data=f"next_search_{query}_{current_index + 1}"
        ))

    if nav_buttons:
        buttons.append(nav_buttons)

    return InlineKeyboardMarkup(inline_keyboard=buttons)




# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Ç–æ–≤–∞—Ä–∞
def get_product_images_keyboard(product_id: int, query: str, current_index: int):
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", callback_data=f"back_to_search_{query}_{current_index}")]
    ])

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ —Ç–æ–≤–∞—Ä–∞
def get_product_specs_keyboard(product_id: int, query: str, current_index: int):
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", callback_data=f"back_to_search_{query}_{current_index}")]
    ])